function [y,n] = LowPass(x,fsa,fca,fta,cfa,pfa);
%LowPass: Lowpass filter
%
%   [y,n] = LowPass(x,fs,fc,ft,cf,pf)
%
%   x    Input signal       
%   fs   Signal sample rate (Hz). Default=125 Hz      
%   fc   Cutoff frequency (Hz). Default=fs/4 Hz 
%   ft   Type: 
%           1=Elliptic (default)
%           2=Butterworth, 
%           3=FIR based on Blackman Window
%           4=Minimun Ringing
%   cf   Causality flag: 1 = causal, 2 = noncausal (default) for tp=1,2
%   pf   Plot flag: 0=none (default), 1=screen
%
%   y    Filtered Signal
%   n    Order of the filter
%
%   Filters the input signal x with a cutoff frequency fc using an 
%   elliptical butterworth filter. The lowpass filter can be causal 
%   or noncausal. The causal implementation uses only the present and
%   previous values to determine the filter's output y, and therefore
%   it is physically realizable for realtime processing. The noncausal 
%   implementation filters the data in the forward direction, and the 
%   filtered sequence is then reversed and run back through the filter.
%   The result has precisely zero phase distortion and magnitude 
%   modifiedby the square of the filter's magnitude response.     
%
%   Example: Filter the raw intracranial pressure signal using an 
%   elliptic lowpass filter with zero phase (noncausal) and with 
%   cutoff frequency fs/4 Hz.This will filter out the high frequency 
%   components (frequencies above fs/4 Hz) and smooth the data.
%
%      load ICP; 
%      [y,n] = LowPass(icp,fs,fs/4,1,2,1);
%
%   Version 1.00 MA
%
%   See also HighPass, filter, filtfilt, ellip, butter, RateFilter, 
%   and KernelFilter.

%=====================================================================
% Process function arguments
%=====================================================================
if nargin<1 | nargin>6,
    help LowPass;
    return;
    end;

fs = 125;                              % Default sampling rate, Hz
if exist('fsa') & ~isempty(fsa),
    fs = fsa;
    end;
 
fc = fs/4;                             % Default cutoff frequency, Hz
if exist('fca') & ~isempty(fca),
    fc = fca;
    end;
    
ft = 1;                                % Default filter type
if exist('fta') & ~isempty(fta),
    ft = fta;
    end;
    
cf = 2;                                % Default causality flag
if exist('cfa') & ~isempty(cfa),
    cf = cfa;
    end;

pf = 0;                                % Default - no plotting
if nargout==0,                         % Plot if no output arguments
    pf = 1;
    end;  
if exist('pfa') & ~isempty(pfa),
    pf = pfa;
    end;

%=========================================================================
% Process Inputs
%=========================================================================
x  = x(:);
LD = length(x);
k  = 1:LD;

%=========================================================================
% LowPass Filtering
%=========================================================================
nf  = fs/2;
wlp = fc/nf; 
Ws  = wlp*1.2;
Wp  = wlp*0.8;
Rp  = 0.5;
Rs  = 40;

%-----------------------------------------------------------------------
% Elliptic Filter (tp==1)
%----------------------------------------------------------------------- 
if ft==1,                                     
    if cf==1,                                    % causal
     	[N,Wn] = ellipord(Wp, Ws, Rp, Rs);
    	[B,A ] = ellip(N, Rp, Rs, Wn);
        y      = filter(B,A,x);
    else                                         % non-causal
    	[N,Wn] = ellipord(Wp, Ws, Rp, Rs);
    	[B,A ] = ellip(N, Rp, Rs, Wn);
        y      = filtfilt(B,A,x);
    end;

%----------------------------------------------------------------------- 
% Butterworth Filter (tp==2)    
%-----------------------------------------------------------------------
elseif ft == 2,                                                              
    if cf==1,                                    % causal 
        [N, Wn] = buttord(Wp,Ws,Rp,Rs);
        [B,A]   = butter(N,Wn);
        y       = filter(B,A,x);  
    else                                         % non-causal
        [N, Wn] = buttord(Wp,Ws,Rp,Rs);
        [B,A]   = butter(N,Wn);
        y       = filtfilt(B,A,x); 
    end;
    
 %-----------------------------------------------------------------------
 % Eliminate start-up transients (tp==3)    
 %-----------------------------------------------------------------------
 elseif ft==3, 
	NX = length(x);
    N  = min([500 floor(NX/4)]);
	if rem(N,2),                                % Make N even
		N = N + 1;
		end;
	B = fir1(N,wlp,blackman(N+1),'noscale');    % B should be odd
	B = B/sum(B);
	A = 0;
    y = conv(B,x);
	y = y(N/2 + (1:NX));
	ci = [1:(N/2) (NX+1-N/2):NX];
	for c1 = 1:length(ci),
		in    = ci(c1);
		xi    = max( 1,in-N/2):min(NX,in+N/2);
		bi    = (N/2+1) + (max(1-in,-N/2):min(NX-in,N/2));
		y(in) = sum(x(xi)'.*B(bi))/sum(B(bi));
		end;		
%-----------------------------------------------------------------------
% Blackman lookup table method (tp==4) 
%-----------------------------------------------------------------------
elseif ft==4, 
	NX = length(x);
   A = [...
            5,0.410889;...
            7,0.274048;...
            9,0.205505;...
           11,0.164368;...
           13,0.136963;...
           15,0.117432;...
           17,0.102722;...
           19,0.091309;...
           21,0.082214;...
           23,0.074707;...
           25,0.068481;...
           27,0.063232;...
           29,0.058716;...
           31,0.054810;...
           33,0.051392;...
           35,0.048340;...
           37,0.045654;...
           39,0.043274;...
           41,0.041077;...
           43,0.039124;...
           45,0.037354;...
           47,0.035706;...
           49,0.034241;...
           51,0.032898;...
           53,0.031616;...
           55,0.030457;...
           57,0.029358;...
           59,0.028320;...
           61,0.027405;...
           63,0.026489;...
           65,0.025696;...
           67,0.024902;...
           69,0.024170;...
           71,0.023499;...
           73,0.022827;...
           75,0.022217;...
           77,0.021606;...
           79,0.021057;...
           81,0.020569;...
           83,0.020020;...
           85,0.019592;...
           87,0.019104;...
           89,0.018677;...
           91,0.018250;...
           93,0.017883;...
           95,0.017456;...
           97,0.017151;...
           99,0.016785;...
          101,0.016418;...
          105,0.015808;...
          107,0.015503;...
          111,0.014954;...
          115,0.014404;...
          119,0.013916;...
          121,0.013672;...
          125,0.013245;...
          129,0.012817;...
          133,0.012451;...
          137,0.012085;...
          141,0.011719;...
          147,0.011230;...
          151,0.010986;...
          155,0.010681;...
          161,0.010254;...
          165,0.010010;...
          171,0.009644;...
          175,0.009460;...
          181,0.009155;...
          187,0.008850;...
          193,0.008545;...
          199,0.008301;...
          205,0.008057;...
          211,0.007813;...
          219,0.007568;...
          225,0.007324;...
          231,0.007141;...
          239,0.006897;...
          247,0.006653;...
          255,0.006470;...
          263,0.006287;...
          271,0.006104;...
          279,0.005920;...
          287,0.005737;...
          297,0.005554;...
          305,0.005432;...
          315,0.005249;...
          325,0.005066;...
          335,0.004944;...
          345,0.004761;...
          357,0.004639;...
          367,0.004517;...
          379,0.004333;...
          391,0.004211;...
          403,0.004089;...
          415,0.003967;...
          429,0.003845;...
          443,0.003723;...
          457,0.003601;...
          471,0.003479;...
          485,0.003418;...
          501,0.003296;...
          517,0.003174;...
          533,0.003113;...
          549,0.002991;...
          567,0.002930;...
          583,0.002808;...
          603,0.002747;...
          621,0.002625;...
          641,0.002563;...
          661,0.002502;...
          681,0.002441;...
          703,0.002319;...
          725,0.002258;...
          747,0.002197;...
          771,0.002136;...
          795,0.002075;...
          819,0.002014;...
          845,0.001953;...
          871,0.001892;...
          899,0.001831;...
          927,0.001770;...
          957,0.001709;...
         1017,0.001648;...
         1049,0.001587;...
         1081,0.001526;...
         1115,0.001465;...
         1187,0.001404;...
         1223,0.001343;...
         1301,0.001282;...
         1343,0.001221;...
         1429,0.001160;...
         1519,0.001099;...
         1617,0.001038;...
         1719,0.000977;...
         1829,0.000916;...
         1945,0.000854;...
         2133,0.000793;...
         2341,0.000732;...
         2491,0.000671;...
         2817,0.000610;...
         3091,0.000549;...
         3497,0.000488;...
         4083,0.000427;...
         4765,0.000366;...
         5915,0.000305;...
         7573,0.000244;...
        10001,0.000183;];

    [wco,I] = min(abs(wlp-A(:,2))); % Perform table look up for N
    N = A(I,1);    
 
    B = blackman(N);
	if size(x,1)==1,
		B = B';
		end;
    B = B/sum(B);
        
    if (wco-wlp)/wco>0.05, % If off by more than 1%, display warning
        fprintf('WARNING: LowPass shifted cutoff frequency.\n');
        fprintf('Window Size:%d  Target:%5.3g  Actual:%5.3g\n',N+1,WLP,wco);
        end;   
    
    N = N-1;
	y = conv(B,x);
	y = y(N/2 + (1:NX));
	ci = [1:(N/2) (NX+1-N/2):NX];
	for c1 = 1:length(ci),
		in    = ci(c1);
		xi    = max( 1,in-N/2):min(NX,in+N/2);
		bi    = (N/2+1) + (max(1-in,-N/2):min(NX-in,N/2));
		y(in) = sum(x(xi).*B(bi))/sum(B(bi));
		end;		
    end;

n = N;
%=========================================================================
% Plotting
%=========================================================================
if pf==1
    close all
    figureset(1)
    h = plot(k./fs, x, 'b', k./fs, y, 'r');
    title('Raw Signal and Lowpass Filtered Signal');
    xlabel('Time,s');
    ylabel('Amplitude');
    legend('Raw Signal', 'Lowpass Filtered');
    box off; axisset;
    
    if (ft ~= 3 & ft ~=4),
    figure(2)
    figureset(2)
    freqz(B,A, 512, fs)
    set(h, 'Linewidth', 1.5);
    box off; axisset
        end;
    end;

%=========================================================================
% Take care of outputs
%=========================================================================
if nargout==0,
    clear('y','n');
    end;   